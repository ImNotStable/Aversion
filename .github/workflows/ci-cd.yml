name: CI/CD Pipeline

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]

env:
  JAVA_VERSION: '21'
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Run tests
      run: ./gradlew test -PrunOnCI
    
    - name: Generate test report
      run: ./gradlew jacocoTestReport -PrunOnCI
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./build/reports/jacoco/test/jacocoTestReport.xml
        fail_ci_if_error: true

  sonarqube_analysis:
    runs-on: self-hosted
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' # Only run on push to master
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Run SonarQube analysis
      run: ./gradlew sonarqube -PrunOnCI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Run security audit
      run: ./gradlew dependencyCheckAnalyze -PNVD_API_KEY=${{ secrets.NVD_API_KEY }}
    
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: java
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  build:
    runs-on: self-hosted
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Build application
      run: ./gradlew build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar
        path: build/libs/*.jar

  docker:
    runs-on: self-hosted
    needs: [test, security, sonarqube_analysis]
    if: github.event_name == 'push'
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image using Jib
      run: ./gradlew jib

  deploy:
    runs-on: self-hosted
    needs: [build, docker]
    if: github.ref == 'refs/heads/master'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        echo "This could include:"
        echo "- SSH to production server"
        echo "- Pull latest Docker image"
        echo "- Run deployment script"
        echo "- Perform health checks"
    
    - name: Notify deployment
      if: always()
      run: |
        echo "Deployment completed for ${{ github.sha }}"
